services:
    api:
        container_name: dotnet_api
        build:
            context: ./backend
            dockerfile: Dockerfile
        ports:
            - "5000:80"
        volumes:
            - ./backend:/app
        depends_on:
            - mssql
            - rabbitmq
        environment:
            ASPNETCORE_ENVIRONMENT: Development

    mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        platform: linux/amd64
        ports:
            - "1433:1433"
        environment:
            - ACCEPT_EULA=Y
            - SA_PASSWORD=Passw0rd

    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        restart: always
        ports:
            - "5672:5672"   #RabbitMQ protocol
            - "15672:15672" #Management UI
        environment:
            RABBITMQ_DEFAULT_USER: guest
            RABBITMQ_DEFAULT_PASS: guest
        volumes:
            - rabbitmq-lib:/var/lib/rabbitmq/
            - rabbitmq-log:/var/log/rabbitmq

    frontend-web:
        container_name: flutter_web
        build:
            context: ./frontend
            dockerfile: Dockerfile
            args:
                API_BASE_URL: http://api:80
        ports:
            - "3000:80"
        depends_on:
            - api

    jenkins:
        image: jenkins/jenkins:lts
        container_name: jenkins
        privileged: true
        user: root
        ports:
            - "8080:8080"
            - "50000:50000"
        volumes:
            - jenkins_home:/var/jenkins_home
            - /var/run/docker.sock:/var/run/docker.sock #Enable Jenkins to run Docker commands in the host's Docker
        environment:
            JAVA_OPTS: "-Djenkins.install.runSetupWizard=false"

volumes:
  jenkins_home:
  rabbitmq-lib:
    driver: local
  rabbitmq-log:
    driver: local

